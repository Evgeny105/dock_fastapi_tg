name: Deploy to Server

on:
  push:
    branches:
      - deploy

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN  }}

      - name: Build and push Docker images
        run: |
          docker buildx build --platform linux/amd64 --push -t dockerhub-username/fastapi:latest ./web/api
          docker buildx build --platform linux/amd64 --push -t dockerhub-username/bot:latest ./bot

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /path/to/app
            docker-compose down
            docker-compose pull
            docker-compose up -d

      - name: Install Certbot
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            sudo apt update
            sudo apt install -y certbot python3-certbot-nginx

      - name: Obtain SSL Certificates
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            sudo certbot certonly --webroot -w /var/www/certbot -d yourdomain.com

      - name: Update Nginx configuration
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            echo 'server {
              listen 80;
              server_name yourdomain.com;

              location / {
                  proxy_pass http://api:8000;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }

              location ~ /.well-known/acme-challenge {
                  allow all;
                  root /var/www/certbot;
              }
            }

            server {
              listen 443 ssl;
              server_name yourdomain.com;

              ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
              ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;

              location / {
                  proxy_pass http://api:8000;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
            }' > /etc/nginx/conf.d/default.conf
            sudo nginx -s reload

      - name: Set up Certbot renewal
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            (sudo crontab -l ; echo "0 0 * * * /usr/bin/certbot renew --quiet --renew-hook 'docker-compose restart nginx'") | sudo crontab -
